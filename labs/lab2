class UnsignedBinaryInteger:
    def __init__(self,num_str):
        self.num_str=num_str
    def __lt__(self,other):
        if self.num_str<other.num_str:
            return True
        else:
            return False
    def __gt__(self,other):
        if self.num_str>other.num_str:
            return True
        else:
            return False
    def __eq__(self,other):
        if self.num_str==other.num_str:
            return True
        else:
            return False
    def is_twos_power(self):
        ones=0
        for i in range(len(self.num_str)):
            if self.num_str[i]=='1':
                ones+=1
        if ones==1:
            return True
        else:
            return False
    def largest_twos_power(self):
        lst1=[1,2,4,8,16,32,64,128]
        index=-1
        self.num_str=self.num_str[::-1]
        for i in range(len(self.num_str)):
            if self.num_str[i]=='1':
                index=i
        return lst1[index]      
    def __repr__(self):
        return '0b'+self.num_str
